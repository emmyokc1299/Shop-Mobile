{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Animatable from 'react-native-animatable';\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Side() {\n  var open = useSelector(function (state) {\n    return state.side.open;\n  });\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      prev = _useState2[0],\n      setPrev = _useState2[1];\n\n  useEffect(function () {\n    if (open === true) {\n      setPrev(true);\n    }\n  }, [open]);\n\n  var Animation = function Animation() {\n    if (open === true) {\n      return fadeIn;\n    } else if (open == false && prev === true) {\n      return fadeOut;\n    }\n  };\n\n  return _jsx(Animatable.View, {\n    animation: Animation(),\n    duration: 300,\n    style: styles.main,\n    children: _jsx(Text, {\n      children: \"jhgfd\"\n    })\n  });\n}\nvar fadeIn = {\n  easing: \"ease-in\",\n  0: {\n    opacity: 0,\n    translateX: 0\n  },\n  1: {\n    opacity: 1,\n    translateX: 300\n  }\n};\nvar fadeOut = {\n  easing: \"ease-in\",\n  0: {\n    opacity: 1,\n    translateX: 300\n  },\n  1: {\n    opacity: 0,\n    translateX: 0\n  }\n};\nvar styles = StyleSheet.create({\n  main: {\n    position: 'absolute',\n    height: \"100vh\",\n    width: 300,\n    backgroundColor: \"teal\",\n    right: \"100vw\"\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/MyExpoApp/components/home/Side.js"],"names":["React","useEffect","useState","Animatable","useSelector","Side","open","state","side","prev","setPrev","Animation","fadeIn","fadeOut","styles","main","easing","opacity","translateX","StyleSheet","create","position","height","width","backgroundColor","right"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAGA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,eAAe,SAASC,IAAT,GAAiB;AAE5B,MAAMC,IAAI,GAAGF,WAAW,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,IAAtB;AAAA,GAAD,CAAxB;;AACA,kBAAwBJ,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGK,IAAI,KAAK,IAAZ,EAAiB;AACbI,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GAJQ,EAIN,CAACJ,IAAD,CAJM,CAAT;;AAMA,MAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAIL,IAAI,KAAK,IAAb,EAAkB;AACd,aAAOM,MAAP;AACH,KAFD,MAGK,IAAGN,IAAI,IAAI,KAAR,IAAiBG,IAAI,KAAK,IAA7B,EAAkC;AACnC,aAAOI,OAAP;AACH;AACJ,GAPD;;AAWA,SACI,KAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,SAAS,EAAIF,SAAS,EAAvC;AAA2C,IAAA,QAAQ,EAAI,GAAvD;AAA4D,IAAA,KAAK,EAAEG,MAAM,CAACC,IAA1E;AAAA,cACI,KAAC,IAAD;AAAA;AAAA;AADJ,IADJ;AAKH;AAED,IAAMH,MAAM,GAAG;AACXI,EAAAA,MAAM,EAAE,SADG;AAEX,KAAG;AACCC,IAAAA,OAAO,EAAE,CADV;AAECC,IAAAA,UAAU,EAAE;AAFb,GAFQ;AAMX,KAAG;AACCD,IAAAA,OAAO,EAAE,CADV;AAECC,IAAAA,UAAU,EAAE;AAFb;AANQ,CAAf;AAYA,IAAML,OAAO,GAAG;AACZG,EAAAA,MAAM,EAAE,SADI;AAEZ,KAAG;AACCC,IAAAA,OAAO,EAAE,CADV;AAECC,IAAAA,UAAU,EAAE;AAFb,GAFS;AAMV,KAAG;AACDD,IAAAA,OAAO,EAAE,CADR;AAEDC,IAAAA,UAAU,EAAE;AAFX;AANO,CAAhB;AAaA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,IAAI,EAAE;AACFM,IAAAA,QAAQ,EAAE,UADR;AAEFC,IAAAA,MAAM,EAAE,OAFN;AAGFC,IAAAA,KAAK,EAAE,GAHL;AAIFC,IAAAA,eAAe,EAAE,MAJf;AAKFC,IAAAA,KAAK,EAAE;AALL;AADuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, SafeAreaView, ScrollView, StyleSheet, Image } from \"react-native\";\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport default function Side () {\r\n\r\n    const open = useSelector((state) => state.side.open)\r\n    const [prev, setPrev] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if(open === true){\r\n            setPrev(true)\r\n        }\r\n    }, [open])\r\n\r\n    const Animation = () => {\r\n        if (open === true){\r\n            return fadeIn\r\n        }\r\n        else if(open == false && prev === true){\r\n            return fadeOut\r\n        }\r\n    }\r\n\r\n    //open ? fadeIn : fadeOut\r\n\r\n    return(\r\n        <Animatable.View animation = {Animation()} duration = {300} style={styles.main}>\r\n            <Text>jhgfd</Text>\r\n        </Animatable.View>\r\n    )\r\n}\r\n\r\nconst fadeIn = {\r\n    easing: \"ease-in\",\r\n    0: {\r\n        opacity: 0,\r\n        translateX: 0,\r\n      },\r\n    1: {\r\n        opacity: 1,\r\n        translateX: 300,\r\n      },\r\n}\r\n\r\nconst fadeOut = {\r\n    easing: \"ease-in\",\r\n    0: {\r\n        opacity: 1,\r\n        translateX: 300,\r\n      },\r\n      1: {\r\n        opacity: 0,\r\n        translateX: 0,\r\n      },\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    main: {\r\n        position: 'absolute',\r\n        height: \"100vh\",\r\n        width: 300,\r\n        backgroundColor: \"teal\",\r\n        right: \"100vw\"\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}