{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Dropdown } from 'react-native-element-dropdown';\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProductList(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var colors = [{\n    label: 'white',\n    value: 'white'\n  }, {\n    label: 'black',\n    value: 'black'\n  }, {\n    label: 'red',\n    value: 'red'\n  }, {\n    label: 'blue',\n    value: 'blue'\n  }, {\n    label: 'yellow',\n    value: 'yellow'\n  }, {\n    label: 'green',\n    value: 'green'\n  }];\n  var sizes = [{\n    label: 'XS',\n    value: 'XS'\n  }, {\n    label: 'S',\n    value: 'S'\n  }, {\n    label: 'M',\n    value: 'M'\n  }, {\n    label: 'L',\n    value: 'L'\n  }, {\n    label: 'X',\n    value: 'X'\n  }];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      size = _useState4[0],\n      setSize = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isFocus = _useState6[0],\n      setIsFocus = _useState6[1];\n\n  console.log(color);\n  console.log(size);\n  return _jsxs(ScrollView, {\n    vertical: true,\n    showsVerticalScrollIndicator: true,\n    style: {\n      backgroundColor: \"white\"\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: 600\n      },\n      children: \"Dresses\"\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"column\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16,\n            fontWeight: 600,\n            marginBottom: 7\n          },\n          children: \"Colors\"\n        }), _jsx(Dropdown, {\n          style: [styles.dropdown, isFocus && {\n            borderColor: \"\" + color\n          }],\n          data: colors,\n          value: color,\n          labelField: \"label\",\n          valueField: \"color\",\n          onFocus: function onFocus() {\n            return setIsFocus(true);\n          },\n          onBlur: function onBlur() {\n            return setIsFocus(false);\n          },\n          onChange: function onChange(item) {\n            setColor(item.value);\n            setIsFocus(false);\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"column\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16,\n            fontWeight: 600,\n            marginBottom: 7\n          },\n          children: \"Sizes\"\n        }), _jsx(Dropdown, {\n          style: [styles.dropdown, isFocus && {\n            borderColor: \"black\"\n          }],\n          data: sizes,\n          value: size,\n          labelField: \"label\",\n          valueField: \"size\",\n          onFocus: function onFocus() {\n            return setIsFocus(true);\n          },\n          onBlur: function onBlur() {\n            return setIsFocus(false);\n          },\n          onChange: function onChange(item) {\n            setSize(item.value);\n            setIsFocus(false);\n          }\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 6,\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  dropdown: {\n    maxHeight: 50,\n    borderColor: 'gray',\n    borderWidth: 0.5,\n    borderRadius: 8,\n    paddingHorizontal: 8\n  },\n  label: {}\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/MyExpoApp/screens/ProductList.js"],"names":["React","useState","Dropdown","AntDesign","ProductList","navigation","route","colors","label","value","sizes","color","setColor","size","setSize","isFocus","setIsFocus","console","log","backgroundColor","fontSize","fontWeight","styles","container","flexDirection","marginBottom","dropdown","borderColor","item","StyleSheet","create","padding","display","maxHeight","borderWidth","borderRadius","paddingHorizontal"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { View, Text, SafeAreaView, ScrollView, StyleSheet, Image, Button, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { Dropdown } from 'react-native-element-dropdown';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nexport default function ProductList ({navigation, route}) {\r\n    \r\n    const colors = [\r\n        { label: 'white', value: 'white' },\r\n        { label: 'black', value: 'black' },\r\n        { label: 'red', value: 'red' },\r\n        { label: 'blue', value: 'blue' },\r\n        { label: 'yellow', value: 'yellow' },\r\n        { label: 'green', value: 'green' },\r\n    ]\r\n\r\n    const sizes = [\r\n        { label: 'XS', value: 'XS' },\r\n        { label: 'S', value: 'S' },\r\n        { label: 'M', value: 'M' },\r\n        { label: 'L', value: 'L' },\r\n        { label: 'X', value: 'X' },\r\n\r\n\r\n\r\n\r\n    ]\r\n\r\n    const [color, setColor] = useState(null);\r\n    const [size, setSize] = useState(null)\r\n    const [isFocus, setIsFocus] = useState(false)\r\n\r\n   \r\n\r\n   \r\n\r\n    console.log(color)\r\n    console.log(size)\r\n    return(\r\n        // <View>\r\n        //     <Text>jhgcvbn</Text>\r\n        // </View>\r\n        <ScrollView vertical showsVerticalScrollIndicator = {true} style = {{backgroundColor: \"white\"}}>\r\n            <Text style={{fontSize: 20, fontWeight: 600}}>Dresses</Text>\r\n            <View style = {styles.container}>\r\n                <View style={{flexDirection: \"column\"}}>\r\n                <Text style = {{fontSize: 16, fontWeight: 600, marginBottom: 7}}>Colors</Text>\r\n                <Dropdown\r\n                    style={[styles.dropdown, isFocus && {borderColor: `${color}`}]}\r\n                    data={colors}\r\n                    value={color}\r\n                    labelField=\"label\"\r\n                    valueField=\"color\"\r\n                    onFocus={() => setIsFocus(true)}\r\n                    onBlur={() => setIsFocus(false)}\r\n                    onChange={item => {\r\n                        setColor(item.value)\r\n                        setIsFocus(false)\r\n                    }}\r\n                />\r\n                </View>\r\n\r\n                <View style={{flexDirection: \"column\"}}>\r\n                    <Text style = {{fontSize: 16, fontWeight: 600, marginBottom: 7}}>Sizes</Text>\r\n                    <Dropdown\r\n                        style={[styles.dropdown, isFocus && {borderColor: `black`}]}\r\n                        data={sizes}\r\n                        value={size}\r\n                        labelField=\"label\"\r\n                        valueField=\"size\"\r\n                        onFocus={() => setIsFocus(true)}\r\n                        onBlur={() => setIsFocus(false)}\r\n                        onChange={item => {\r\n                            setSize(item.value)\r\n                            setIsFocus(false)\r\n                        }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n         </ScrollView>\r\n        \r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: 'white',\r\n      padding: 6,\r\n      display: \"flex\",\r\n      flexDirection: \"row\"\r\n    //   width: \"35%\"\r\n\r\n    },\r\n    dropdown: {\r\n      maxHeight: 50,\r\n      borderColor: 'gray',\r\n      borderWidth: 0.5,\r\n      borderRadius: 8,\r\n      paddingHorizontal: 8,\r\n    },\r\n    label: {\r\n\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n/**\r\n * \r\n *  <Filter>\r\n                    <FilterText>Filter Products:</FilterText>\r\n                    <Select>\r\n                        <Option disabled selected>\r\n                            Color\r\n                        </Option>\r\n                        <Option>White</Option>\r\n                        <Option>Black</Option>\r\n                        <Option>Red</Option>\r\n                        <Option>Blue</Option>\r\n                        <Option>Yellow</Option>\r\n                        <Option>Green</Option>\r\n                    </Select>\r\n                    <Select>\r\n                        <Option disabled selected>\r\n                            Size\r\n                        </Option>\r\n                        <Option>XS</Option>\r\n                        <Option>S</Option>\r\n                        <Option>M</Option>\r\n                        <Option>L</Option>\r\n                        <Option>XL</Option>\r\n                    </Select>\r\n                    </Filter> \r\n                <Filter>\r\n */"]},"metadata":{},"sourceType":"module"}