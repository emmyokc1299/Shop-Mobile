{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Picker } from '@react-native-picker/picker';\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProductList(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedColor = _useState2[0],\n      setSelectedColor = _useState2[1];\n\n  return _jsxs(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: true,\n    children: [_jsx(Text, {\n      children: \"Dresses\"\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsxs(Picker, {\n        selectedValue: selectedColor,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedColor(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"white\",\n          value: \"white\"\n        }), _jsx(Picker.Item, {\n          label: \"black\",\n          value: \"black\"\n        }), _jsx(Picker.Item, {\n          label: \"red\",\n          value: \"red\"\n        }), _jsx(Picker.Item, {\n          label: \"blue\",\n          value: \"blue\"\n        }), _jsx(Picker.Item, {\n          label: \"yellow\",\n          value: \"yellow\"\n        }), _jsx(Picker.Item, {\n          label: \"green\",\n          value: \"green\"\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/MyExpoApp/screens/ProductList.js"],"names":["Picker","React","useState","ProductList","navigation","route","selectedColor","setSelectedColor","styles","container","itemValue","itemIndex","StyleSheet","create"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,6BAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;;;AAIA,eAAe,SAASC,WAAT,OAA2C;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAEtD,kBAA0CH,QAAQ,EAAlD;AAAA;AAAA,MAAOI,aAAP;AAAA,MAAsBC,gBAAtB;;AAGA,SACI,MAAC,QAAD;AAAU,IAAA,QAAQ,MAAlB;AAAmB,IAAA,4BAA4B,EAAI,IAAnD;AAAA,eACI,KAAC,IAAD;AAAA;AAAA,MADJ,EAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAIC,MAAM,CAACC,SAAtB;AAAA,gBACI,MAAC,MAAD;AACI,QAAA,aAAa,EAAEH,aADnB;AACkC,QAAA,aAAa,EAAE,uBAACI,SAAD,EAAYC,SAAZ;AAAA,iBAA0BJ,gBAAgB,CAACG,SAAD,CAA1C;AAAA,SADjD;AAAA,mBAEI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,OAAnB;AAA2B,UAAA,KAAK,EAAC;AAAjC,UAFJ,EAGI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,OAAnB;AAA2B,UAAA,KAAK,EAAC;AAAjC,UAHJ,EAII,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,KAAnB;AAAyB,UAAA,KAAK,EAAC;AAA/B,UAJJ,EAKI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,MAAnB;AAA0B,UAAA,KAAK,EAAC;AAAhC,UALJ,EAMI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,QAAnB;AAA4B,UAAA,KAAK,EAAC;AAAlC,UANJ,EAOI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,OAAnB;AAA2B,UAAA,KAAK,EAAC;AAAjC,UAPJ;AAAA;AADJ,MAFJ;AAAA,IADJ;AAmBH;AAGD,IAAMF,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AADkB,CAAlB,CAAf","sourcesContent":["import {Picker} from '@react-native-picker/picker';\r\nimport React, { useState } from \"react\";\r\nimport { View, Text, SafeAreaView, ScrollView, StyleSheet, Image, Button, TouchableOpacity, FlatList } from \"react-native\";\r\n\r\n\r\nexport default function ProductList ({navigation, route}) {\r\n    \r\n    const [selectedColor, setSelectedColor] = useState();\r\n    \r\n\r\n    return(\r\n        <FlatList vertical showsVerticalScrollIndicator = {true}>\r\n            <Text>Dresses</Text>\r\n            <View style = {styles.container}>\r\n                <Picker\r\n                    selectedValue={selectedColor} onValueChange={(itemValue, itemIndex) => setSelectedColor(itemValue)}>\r\n                    <Picker.Item label=\"white\" value=\"white\" />\r\n                    <Picker.Item label=\"black\" value=\"black\" />\r\n                    <Picker.Item label=\"red\" value=\"red\" />\r\n                    <Picker.Item label=\"blue\" value=\"blue\" />\r\n                    <Picker.Item label=\"yellow\" value=\"yellow\" />\r\n                    <Picker.Item label=\"green\" value=\"green\" />\r\n                </Picker>\r\n            </View>\r\n\r\n        </FlatList>\r\n        \r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n/**\r\n * \r\n *  <Filter>\r\n                    <FilterText>Filter Products:</FilterText>\r\n                    <Select>\r\n                        <Option disabled selected>\r\n                            Color\r\n                        </Option>\r\n                        <Option>White</Option>\r\n                        <Option>Black</Option>\r\n                        <Option>Red</Option>\r\n                        <Option>Blue</Option>\r\n                        <Option>Yellow</Option>\r\n                        <Option>Green</Option>\r\n                    </Select>\r\n                    <Select>\r\n                        <Option disabled selected>\r\n                            Size\r\n                        </Option>\r\n                        <Option>XS</Option>\r\n                        <Option>S</Option>\r\n                        <Option>M</Option>\r\n                        <Option>L</Option>\r\n                        <Option>XL</Option>\r\n                    </Select>\r\n                    </Filter> \r\n                <Filter>\r\n */"]},"metadata":{},"sourceType":"module"}